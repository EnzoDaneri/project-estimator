{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Form.svelte",
    "../../Table.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport Table from './Table.svelte';\nimport Form from './Form.svelte';\n\nlet id;\nlet name = '';\nlet price= 5;\n\nconst edit = (event) => {\n  ({id, name, price} = event.detail);\n}\n\n</script>\n\n\n<main>\n<h1>Project Estimator</h1>\n<Form bind:price bind:id bind:name />\n<Table on:edit={edit}/>\n\n</main>\n\n\n\n<style>\nmain {\n\tflex: 1;\n\talign-content: center;\n\tjustify-content: center;\n\twidth: 80%;\n\tmargin: 0 auto;\n}\n\n\n</style>",
    "<script>\nimport materialStore from './material-store.js';\n\nexport let id;\nexport let name= '';\nexport let price = 5;\n\n\n$: mode = id ? 'edit' : 'add'; \n$: canSubmit = price >=0 && name !== '';\n\nconst submit = () => {\n    if(!canSubmit) {\n        return;\n    }\n\n if(mode === 'add') {\n     materialStore.add(name, price);\n }\n\n if(mode === 'edit') {\n     materialStore.edit(id, name, price);\n }\n\n   price = '5';\n   name= '';\n   id= undefined;\n}\n\nconst cancel= () => {\n   price = '';\n   name= '';\n   id= undefined;\n}\n\n</script>\n\n\n\n<form on:submit|preventDefault={submit}>\n<fieldset>\n <label for=\"nameField\">Material</label>\n <input bind:value={name} type=\"text\" id=\"nameField\"\n placeholder=\"wood, glue, etc\">\n\n  <label for=\"priceField\">Price</label>\n <input bind:value={price} type=\"number\" id=\"priceField\" min=\"0\" step=\"any\"\n placeholder=\"Price\">\n\n</fieldset>\n<button disabled={!canSubmit} type=\"submit\" class=\"float-right\">{mode}</button>\n\n{#if mode === 'edit'}\n<button on:click={cancel} type=\"button\" class=\"float-right\">Cancel</button>\n{/if}\n</form>\n\n\n<style>\nbutton {\n    margin-left: 20px;\n}\nbutton:disabled {\n    cursor: not-allowed;\n}\n\n</style>",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  import materialStore from './material-store.js';\n\n  const dispatch = createEventDispatcher();\n  let materials = [];\n\n materialStore.subscribe(items => {\n     materials = items;\n//cada vez que se actualice, materials serÃ¡ = items\n })\n\n\n$: total = materials.reduce((prev, next) => {\n     prev += next.price;\n     return prev;\n}, 0);\n\n\n\nconst edit = (id, name, price ) => {\n      dispatch('edit', {id, name, price});\n}\n\n\n\n// $: console.log(materials);\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n});\n\n\nconst remove = (id) => {\n  materialStore.remove(id);\n   \n}\n\n\n</script>\n\n<h1>{total}</h1>\n<table class=\"primary\">\n <thead>\n   <tr>\n     <th>Material</th>\n     <th>Price</th>\n     <th></th>\n   \n   </tr>\n </thead>\n <tbody>\n {#each materials as material (material.id)}\n  <tr on:click={edit(material.id, material.name, material.price)}>\n    <td>{material.name}</td>\n    <td>{formatter.format( material.price)}</td>\n    <td><i on:click|stopPropagation={remove(material.id)} class=\"far fa-trash-alt\"></i> </td>\n  </tr>\n {/each}\n  <tr>\n    <td>Total</td>\n    <td colspan=\"2\">{formatter.format(total)}</td>\n  </tr>\n </tbody>\n</table>\n\n\n<style>\ntable {\n    width: 100%;\n}\n\ntr {\n    cursor: pointer;\n}\ntr:last-of-type {\n    cursor: inherit;\n}\n\n</style>"
  ],
  "names": [],
  "mappings": "AAyBA,IAAI,cAAC,CAAC,AACL,IAAI,CAAE,CAAC,CACP,aAAa,CAAE,MAAM,CACrB,eAAe,CAAE,MAAM,CACvB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC;AC4BD,MAAM,cAAC,CAAC,AACJ,WAAW,CAAE,IAAI,AACrB,CAAC,AACD,oBAAM,SAAS,AAAC,CAAC,AACb,MAAM,CAAE,WAAW,AACvB,CAAC;ACKD,KAAK,cAAC,CAAC,AACH,KAAK,CAAE,IAAI,AACf,CAAC,AAED,EAAE,cAAC,CAAC,AACA,MAAM,CAAE,OAAO,AACnB,CAAC,AACD,gBAAE,aAAa,AAAC,CAAC,AACb,MAAM,CAAE,OAAO,AACnB,CAAC"
}